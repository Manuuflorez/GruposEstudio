<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://kit.fontawesome.com/8133639c1c.js" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"></script>
    <script type="text/javascript">
        emailjs.init('Zh5Xh3x-J1rmUjEuJ')
    </script>
    <link rel="stylesheet" href="/styles.css">

    <title>StudyCoop</title>

</head>

<body>
    <header>
        <h2 class="logo">@ StudyCoop</h2>

        <input type="checkbox" id="check">
        <label for="check" class="mostrar-menu">
            &#8801
        </label>
        <nav class="menu">
            <a href="/users/perfil">Mi cuenta <%= user.name %>
                    <%= user.lastname %></a>
            <a href="/users/logout">Cerrar sesión</a>
            <label for="check" class="esconder-menu">
                &#215
            </label>
        </nav>
    </header>

    <!-- Barra de búsqueda -->
    <form action="#" method="get" class="search-form">
        <input type="text" name="search" id="search" placeholder="Buscar...">
        <button type="submit"><i class="fas fa-search"></i></button>
    </form>

    <!-- Pestañas -->
    <div class="tab">
        <button class="tablinks" onclick="openTab(event, 'Servicios')">Servicios</button>
        <button class="tablinks" onclick="openTab(event, 'Solicitudes')">Solicitudes</button>
    </div>

    <!-- Contenido de las pestañas -->
    <div id="Servicios" class="tabcontent">
        <ul id="ultimas-ofrecer">
            <!-- Aquí se mostrarán las últimas solicitudes -->
        </ul>

        <!-- Script para obtener las últimas solicitudes -->
        <script>
            document.addEventListener("DOMContentLoaded", () => {
                fetch("/api/ultimas-ofrecer")
                    .then(response => response.json())
                    .then(data => {
                        // Por ejemplo, podrías mostrar las solicitudes en una lista
                        const list = document.getElementById("ultimas-ofrecer");
                        data.forEach(solicitud => {
                            const listItem = document.createElement("li");
                            listItem.textContent = `${solicitud.tipo_servicio}: ${solicitud.materia}`;
                            list.appendChild(listItem);
                        });
                    })
                    .catch(error => console.error("Error al obtener las solicitudes:", error));
            });
        </script>

    </div>
    <div id="Solicitudes" class="tabcontent">

        <ul id="ultimas-solicitudes">
            <!-- Aquí se mostrarán las últimas solicitudes -->
        </ul>

        <!-- Script para obtener las últimas solicitudes -->
        <script>
            document.addEventListener("DOMContentLoaded", () => {
                fetch("/api/ultimas-solicitudes")
                    .then(response => response.json())
                    .then(data => {
                        // Por ejemplo, podrías mostrar las solicitudes en una lista
                        const list = document.getElementById("ultimas-solicitudes");
                        data.forEach(solicitud => {
                            const listItem = document.createElement("li");
                            listItem.textContent = `${solicitud.tipo_servicio}: ${solicitud.materia}`;
                            list.appendChild(listItem);
                        });
                    })
                    .catch(error => console.error("Error al obtener las solicitudes:", error));
            });
        </script>

    </div>

    <h1 style="text-align: center; margin-top: 50px; margin-bottom: 70px; color: #3c3c45;">Ofrece tus servicios o
        Solicita uno</h1>

    <div style="text-align: center; margin-top: 20px;">
        <button onclick="toggleForm()"
            style="border-radius: 5px; padding: 20px 40px; transition: background-color 0.3s; background-color: #4d4d5c; color: white; font-size: 20px;cursor: pointer;">Publicar</button>
    </div>

    <!-- Formulario de Publicación -->
    <div id="publicarForm" class="publicar-form"
        style="display: none; background-color: rgba(255, 255, 255, 0.95); position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); padding: 50px; border-radius: 20px; box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.5);">
        <h2 style="text-align: center; margin-bottom: 20px;">Formulario de Publicación</h2>
        <!-- Botón de cerrar -->
        <button onclick="toggleForm()"
            style="position: absolute; top: 20px; right: 20px; background: none; border: none; font-size: 24px; color: #555;cursor: pointer;">&times;</button>
        <!-- Fin del botón de cerrar -->
        <form action="/dashboard/publicar" method="post">
            <input type="hidden" id="user_data" name="user_data" value="<%= user %>">
            <label for="tipo">Tipo de Publicación:</label><br>
            <select id="tipo" name="tipo"
                style="width: 100%; padding: 10px; margin-bottom: 20px; border-radius: 5px; border: 1px solid #ccc;">
                <option value="solicitar">Solicitar Servicio</option>
                <option value="ofrecer">Ofrecer Servicio</option>
            </select><br>
            <label for="materia">Materia:</label><br>
            <select id="materia" name="materia"
                style="width: 100%; padding: 10px; margin-bottom: 20px; border-radius: 5px; border: 1px solid #ccc;">
                <option value="" disabled selected>Selecciona una materia</option>
                <!-- Aquí se agregarán las opciones de las categorías dinámicamente -->
            </select><br>
            <label for="fecha">Fecha:</label><br>
            <input type="date" id="fecha" name="fecha"
                style="width: 100%; padding: 10px; margin-bottom: 20px; border-radius: 5px; border: 1px solid #ccc;"><br>
            <label for="tema">Tema:</label><br>
            <input type="text" id="tema" name="tema"
                style="width: 100%; padding: 10px; margin-bottom: 20px; border-radius: 5px; border: 1px solid #ccc;"><br><br>
            <button type="submit" onclick="toggleForm()"
                style="width: 100%; padding: 15px; background-color: #4d4d5c; color: white; border: none; border-radius: 5px; cursor: pointer;">Enviar</button>
        </form>
        <!-- Botón de cerrar dentro del formulario -->
        <button onclick="toggleForm()"
            style="margin-top: 20px; padding: 15px; width: 100%; background-color: #ccc; color: #333; border: none; border-radius: 5px; cursor: pointer;">Cerrar</button>
        <!-- Fin del botón de cerrar dentro del formulario -->
    </div>
    <hr style="margin-top: 20px; border: none;margin-bottom: 30px; border-top: 1px solid #ccc;">

    <!-- Detalles de la publicación -->
    <div id="verDetalles" class="publicar-form"
        style="display: none; background-color: rgba(255, 255, 255, 0.95); position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); padding: 50px; border-radius: 20px; box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.5);">
        <h2 style="text-align: center; margin-bottom: 20px;">Detalles de la Publicación</h2>
        <!-- Botón de cerrar -->
        <button onclick="cerrarDetalles()"
            style="position: absolute; top: 20px; right: 20px; background: none; border: none; font-size: 24px; color: #555;cursor: pointer;">&times;</button>
        <!-- Fin del botón de cerrar -->
        <div id="detallesContenido" style="margin-bottom: 20px;"></div>
        <button type="submit" onclick="agendarServicio()"
            style="width: 100%; padding: 15px; background-color: #4d4d5c; color: white; border: none; border-radius: 5px; cursor: pointer;">Agendar</button>

        <!-- Botón de cerrar dentro del formulario -->
        <button onclick="cerrarDetalles()"
            style="margin-top: 20px; padding: 15px; width: 100%; background-color: #ccc; color: #333; border: none; border-radius: 5px; cursor: pointer;">Cerrar</button>
        <!-- Fin del botón de cerrar dentro del formulario -->
    </div>

    <!-- Espacio para categorías -->
    <div class="categorias-container">
        <div class="flecha-izquierda" onmousedown="startScrolling(-100)" onmouseup="stopScrolling()">&#10094;</div>
        <ul class="categorias-container2" id="categorias-lista">
            <!-- Las categorías se agregarán aquí dinámicamente -->
        </ul>
        <div class="flecha-derecha" onmousedown="startScrolling(100)" onmouseup="stopScrolling()">&#10095;</div>
    </div>

    <hr style="margin-top: 15px; border: none; border-top: 1px solid #ccc;">

    <div>
        <h2 style="padding: 25px;">Ultimas publicaciones recientes!</h2>
    </div>

    <div class="publicaciones-container" style="padding: 25px; margin-bottom: 30px; text-align: center;">
        <div id="publicaciones-lista" style="display: inline-block;">
            <!-- Las publicaciones se agregarán aquí dinámicamente -->
        </div>


        <script>
            var scrollInterval;

            document.addEventListener("DOMContentLoaded", () => {
                fetch("/api/ultimas-publicaciones") // Cambia la ruta de la solicitud
                    .then(response => response.json())
                    .then(data => {
                        const listaPublicaciones = document.getElementById("publicaciones-lista");
                        listaPublicaciones.innerHTML = ""; // Limpiamos la lista antes de agregar las publicaciones

                        data.forEach(publicacion => {
                            const div = document.createElement("div");
                            div.className = "publicacion-container";

                            const titulo = document.createElement("h3");
                            if (publicacion.tipo_servicio == "solicitar") {
                                titulo.textContent = "Solicitud " + publicacion.materia
                            } else {
                                titulo.textContent = "Asesoria " + publicacion.materia
                            }

                            const info = document.createElement("p");
                            // Convertir la fecha en un objeto de fecha
                            const fecha = new Date(publicacion.fecha_reunion);
                            // Obtener el día de la semana
                            const diaSemana = obtenerNombreDiaSemana(fecha.getDay());
                            // Obtener el día del mes
                            const diaMes = fecha.getDate();
                            // Obtener el nombre del mes
                            const nombreMes = obtenerNombreMes(fecha.getMonth());
                            // Obtener el año
                            const año = fecha.getFullYear();
                            // Crear una cadena de fecha formateada
                            const fechaFormateada = `${diaSemana} ${diaMes} de ${nombreMes}`;
                            // Utilizar la fecha formateada en el contenido del párrafo
                            info.textContent = `Día: ${fechaFormateada}`;

                            const botonDetalle = document.createElement("button");
                            botonDetalle.textContent = "Ver Detalles";
                            botonDetalle.className = "boton-detalles";
                            botonDetalle.onclick = function () {
                                verDetallesPublicacion(publicacion);
                                // Puedes agregar aquí la lógica para redirigir al usuario a la página de detalles de la publicación
                            };

                            const tema = document.createElement("p")
                            tema.textContent = `Tema: ${publicacion.tema_interes}`;

                            div.appendChild(titulo);
                            div.appendChild(info);
                            div.appendChild(tema);
                            div.appendChild(botonDetalle);
                            listaPublicaciones.appendChild(div);
                        });
                    })
                    .catch(error => console.error("Error al obtener las publicaciones:", error));
            });

            function verDetallesPublicacion(publicacion) {
                const detallesContenido = document.getElementById("detallesContenido");
                detallesContenido.innerHTML = ""; // Limpiamos el contenido antes de agregar los detalles

                const titulo = document.createElement("h3");
                if (publicacion.tipo_servicio == "solicitar") {
                    titulo.textContent = "Solicitud " + publicacion.materia
                } else {
                    titulo.textContent = "Asesoria " + publicacion.materia
                }

                const materia = document.createElement("p");
                materia.textContent = `Materia: ${publicacion.materia}`;


                const fecha = new Date(publicacion.fecha_reunion);
                // Obtener el día de la semana
                const diaSemana = obtenerNombreDiaSemana(fecha.getDay());
                // Obtener el día del mes
                const diaMes = fecha.getDate();
                // Obtener el nombre del mes
                const nombreMes = obtenerNombreMes(fecha.getMonth());
                // Obtener el año
                const año = fecha.getFullYear();
                // Crear una cadena de fecha formateada
                const fechaFormateada = `${diaSemana} ${diaMes} de ${nombreMes}`;
                const info = document.createElement("p");
                info.textContent = `Fecha: ${fechaFormateada}`;

                const contenido = document.createElement("p");
                contenido.textContent = `Tema: ${publicacion.tema_interes}`;

                const usuario = document.createElement("p");
                usuario.textContent = `Publicado por: ${publicacion.user_data.name} ${publicacion.user_data.lastname}`;


                detallesContenido.appendChild(titulo);
                detallesContenido.appendChild(usuario);
                detallesContenido.appendChild(materia);
                detallesContenido.appendChild(contenido);
                detallesContenido.appendChild(info);

                const verDetalles = document.getElementById("verDetalles");
                verDetalles.style.display = "block"; // Mostramos los detalles
            }

            // Función para cerrar los detalles de la publicación
            function cerrarDetalles() {
                const verDetalles = document.getElementById("verDetalles");
                verDetalles.style.display = "none"; // Ocultamos los detalles
            }

            // Función para iniciar el desplazamiento continuo
            function startScrolling(amount) {
                scrollInterval = setInterval(function () {
                    scrollCategorias(amount);
                }, 100); // Intervalo de tiempo en milisegundos
            }

            // Función para detener el desplazamiento continuo
            function stopScrolling() {
                clearInterval(scrollInterval);
            }

            function openTab(evt, tabName) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(tabName).style.display = "block";
                evt.currentTarget.className += " active";
            }

            function toggleForm() {
                var form = document.getElementById("publicarForm");
                if (form.style.display === "none") {
                    form.style.display = "block";
                } else {
                    form.style.display = "none";
                }
            }

            function scrollCategorias(amount) {
                const container = document.querySelector('.categorias-container2');
                container.scrollBy({ left: amount, behavior: 'smooth' });
            }

            var categorias = ["Matemáticas", "Física", "Programación", "Idiomas", "Derecho", "Pedagogía",
                "Comunicación", "Administración ", "Estadistica", "Otros"];

            // Función para generar las categorías dinámicamente
            function generarCategorias() {
                var listaCategorias = document.getElementById("categorias-lista");
                listaCategorias.innerHTML = ""; // Limpiamos la lista antes de agregar las categorías

                categorias.forEach(function (categoria) {
                    var li = document.createElement("li");
                    li.textContent = categoria;
                    li.className = "categoria";
                    listaCategorias.appendChild(li);
                });
            }

            function agendarServicio() {
                console.log("En desarrollo")
            }
            // Función para generar las opciones del select de materias dinámicamente
            function generarOpcionesMaterias() {
                var selectMateria = document.getElementById("materia");

                // Limpiamos las opciones existentes antes de agregar las nuevas
                selectMateria.innerHTML = "";

                // Agregamos la opción predeterminada deshabilitada y seleccionada
                var defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.textContent = "Selecciona una materia";
                defaultOption.disabled = true;
                defaultOption.selected = true;
                selectMateria.appendChild(defaultOption);

                // Iteramos sobre las categorías y agregamos cada una como una opción
                categorias.forEach(function (categoria) {
                    var option = document.createElement("option");
                    option.value = categoria;
                    option.textContent = categoria;
                    selectMateria.appendChild(option);
                });
            }

            // Llamamos a la función para generar las opciones de materias al cargar la página
            window.onload = function () {
                generarCategorias();
                generarOpcionesMaterias();
                generarPublicaciones();
            };

            // Función para obtener el nombre del día de la semana
            function obtenerNombreDiaSemana(diaSemana) {
                const diasSemana = ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"];
                return diasSemana[diaSemana];
            }

            // Función para obtener el nombre del mes
            function obtenerNombreMes(numeroMes) {
                const nombresMeses = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];
                return nombresMeses[numeroMes];
            }

        </script>

</body>

</html>

<style>
    * {
        margin: 0;
        padding: 0;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
    }

    .publicaciones-container {
        overflow-x: auto;
        white-space: nowrap;
        padding: 10px 0;
    }

    .publicaciones-lista {
        white-space: nowrap;
        overflow-x: auto;
    }

    .publicacion-container {
        display: inline-block;
        margin-right: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 300px;
        /* Ajusta el ancho de cada publicación según sea necesario */
    }

    .boton-detalles {
        display: block;
        margin-top: 10px;
        background-color: #4d4d5c;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 5px 10px;
        cursor: pointer;
    }

    /* Estilos para las flechas de desplazamiento */
    .flecha-izquierda,
    .flecha-derecha {
        display: inline-block;
        font-size: 24px;
        cursor: pointer;
        padding: 10px;
    }

    .flecha-izquierda:hover,
    .flecha-derecha:hover {
        background-color: #f1f1f1;
    }


    .categorias-container {
        display: flex;
        overflow-x: hidden;
        margin-bottom: 20px;
        padding: 10px 0;
        border-radius: 10px;
    }

    .categorias-container2 {
        display: flex;
        overflow-x: hidden;
        margin-bottom: 20px;
        padding: 10px 0;
        border-radius: 10px;
    }

    .categoria {
        flex-shrink: 0;
        width: 200px;
        height: 150px;
        background-color: rgb(237, 237, 237);
        /* Cambiar el color de fondo a gris claro */
        margin-right: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 10px;
        color: #4d4d5c;
        font-size: 18px;
        cursor: pointer;
        transition: background-color 0.3s;
    }


    .categoria:hover {
        background-color: #888888;
    }

    .flecha-izquierda,
    .flecha-derecha {
        font-size: 30px;
        margin: 0 20px;
        color: #4d4d5c;
        cursor: pointer;
        transition: color 0.3s;
    }

    .flecha-izquierda:hover,
    .flecha-derecha:hover {
        color: #353540;
    }

    header {
        height: 100px;
        /*background: rgb(108, 118, 118);*/
        background: #4d4d5c;
        padding: 0 50px;
        color: aliceblue;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        text-transform: uppercase;
        font-weight: 200;
        color: whitesmoke;
    }

    .menu a {
        color: #fff;
        text-decoration: none;
        text-transform: uppercase;
        padding: 0 10px;
        transition: 0.4s;

    }

    .mostrar-menu,
    .esconder-menu {
        font-size: 30px;
        cursor: pointer;
        transition: 0.4s;
        display: none;
    }

    .mostrar-menu {
        order: 1;
    }

    .menu a:hover,
    .mostrar-menu:hover,
    .esconder-menu:hover {
        color: #666666;
    }

    #check {
        display: none;
    }

    @media(max-width:768px) {

        .mostrar-menu,
        .esconder-menu {
            display: block;
        }

        .menu {
            position: fixed;
            height: 100vh;
            z-index: 100;
            width: 100%;
            background: rgb(86, 87, 87);
            /*left: 0;*/
            right: -100%;
            top: 0;
            text-align: center;
            padding: 100px 0px;
            z-index: 100;
            transition: o.8s;
        }

        .menu a {
            display: block;
            padding: 20px;
        }

        .esconder-menu {
            position: absolute;
            top: 40px;
            right: 40px;
        }

        #check:checked~.menu {
            right: 0;
        }

        #personas {
            flex-direction: column;
        }

        .contenido-icono {
            flex-direction: column;
        }

        .contenido-icono div {
            border: none !important;
        }

        .datos-form {
            flex-direction: column;
        }
    }


    /*BANNER*/

    #banner {
        padding: 0 50px;
        background: url(./Images/main.jpg);
        height: 50vh;
        background-size: cover;
        background-position: center;
    }

    #banner::before {
        content: '';
        background: rgb(77, 77, 92, 0.5);
        position: absolute;
        width: 100%;
        height: 50vh;
        left: 0;
    }

    .contenido-banner h3 {
        font-size: 30px;
        font-weight: 400;
        padding: 10px 0;
    }

    .contenido-banner h3 span {
        font-weight: 600;
    }

    .contenido-banner {
        position: relative;
        color: #fff;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .boton-empezar {
        text-decoration: none;
        transition: all 0.6s;
        color: #fff;
        border: 1px solid grey;
        padding: 20px 40px;
        align-self: baseline;
    }

    .boton-empezar:hover {
        background-color: grey;
        color: black;
    }

    #personas {
        padding: 50px50px;
        background-color: #f5f5f5;
        display: flex;
        justify-content: center;
        text-align: center;

    }

    #personas img {
        border-radius: 100%;
        object-fit: cover;
        width: 280px;
        height: 280px;
    }

    #personas div {
        padding: 30px 30px;
    }

    #personas div h4 {
        color: Black;
        font-size: 20px;
        margin: 15px 0px;
    }

    #personas div p {
        color: grey;
        font-size: 18px;
    }

    .linea {
        border-top: 1px solid #f5f5f5;
        /* Puedes ajustar el color y el grosor según tus preferencias */
        margin: 10px 0;
    }

    #iconos {
        padding: 0 50px;
        background: #f5f5f5;
    }

    .titulo-iconos {
        text-align: center;
        font-size: 20px;
    }

    .contenido-icono {
        padding: 50px 50px0 15px;
        display: flex;
        justify-content: space-between;
        text-align: center;
    }

    .contenido-icono div {
        flex: 1;
        margin: 20px 0px;
        border-right: 2px solid #4d4d5c;
    }

    .contenido-icono div i {
        color: grey;
    }

    .contenido-icono div h4 {
        color: black;
        font-weight: 500;
        margin: 20px 0px;
        font-size: 20px;
    }

    .contenido-icono div p {
        color: grey;
        font-size: 16px;
    }

    #icono-mobile {
        border: none;
    }

    .boton-saber-mas {
        display: inline-block;
        text-decoration: none;
        color: white;
        padding: 10px 30px;
        border: 3px solid rgb(139, 0, 0);
        border-radius: 30px;
        margin-top: 15px;
        transition: all 0.4s;
    }

    .boton-saber-mas:hover {
        /* background: rgb(69, 207, 161); */
        background-color: rgb(139, 0, 0);
        color: whitesmoke;
    }

    .boton-iconos {
        text-align: center;
        padding: 40px;
    }

    .boton-iconos .boton-saber-mas {
        color: floralwhite;
    }


    /* Estilos para las pestañas */
    .tab {
        overflow: hidden;
        border-bottom: 1px solid #ccc;
        background-color: white;
    }

    .tab button {
        background-color: inherit;
        float: left;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 20px 30px;
        /* Ajusta el relleno según sea necesario */
        transition: 0.3s;
        font-size: 18px;
        /* Ajusta el tamaño del texto según sea necesario */
    }

    .tab button:hover {
        background-color: #ddd;
    }

    .tab button.active {
        background-color: #ccc;
    }

    /* Contenido de las pestañas */
    .tabcontent {
        display: none;
        padding: 20px;
        border-top: none;
        font-size: 16px;
        /* Ajusta el tamaño del texto según sea necesario */
    }


    footer {
        background: #4d4d5c;
        color: whitesmoke;
        text-align: center;
        padding: 20px 0;
    }

    .search-form {
        text-align: center;
        margin-top: 50px;
        /* Ajusta el margen superior según sea necesario */
    }

    .search-form input[type="text"] {
        width: 400px;
        /* Ajusta el ancho según sea necesario */
        height: 40px;
        /* Ajusta la altura según sea necesario */
        padding: 10px;
        /* Ajusta el relleno según sea necesario */
        font-size: 16px;
        /* Ajusta el tamaño de fuente según sea necesario */
        border: 1px solid #ccc;
        /* Ajusta el borde según sea necesario */
        border-radius: 20px;
        /* Ajusta el radio de borde según sea necesario */
        outline: none;
    }

    .search-form button[type="submit"] {
        height: 40px;
        /* Ajusta la altura según sea necesario */
        padding: 0 20px;
        /* Ajusta el relleno según sea necesario */
        background-color: #4d4d5c;
        /* Ajusta el color de fondo según sea necesario */
        color: #fff;
        /* Ajusta el color del texto según sea necesario */
        border: none;
        border-radius: 20px;
        /* Ajusta el radio de borde según sea necesario */
        cursor: pointer;
        transition: background-color 0.3s ease-in-out;
    }

    .search-form button[type="submit"]:hover {
        background-color: #333;
        /* Cambia el color de fondo al pasar el cursor */
    }
</style>